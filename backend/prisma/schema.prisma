// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                            String   @id @unique @default(uuid())
  createAt                      DateTime @default(now())
  updateAT                      DateTime @default(now())
  checkID                       String   @unique
  login                         String   @unique
  fullName                      String
  avatarUrl                     String
  firstName                     String
  lastName                      String
  email                         String   @unique
  phonenumber                   String?
  country                       String?
  twofactor                     Boolean  @default(false)
  twoFactorAuthenticationSecret String

  channels String[]
  friends  String[]

  // bookmarks Bookmark[]
  @@map("users")
}

model Room {
  id       String   @id @unique @default(uuid())
  createAt DateTime @default(now())
  updateAT DateTime @default(now())

  name     String   @unique
  user_one String
  user_two String
  messages Message[]

  @@map("maps")
}

model RoomChannel {
  id       String   @id @unique @default(uuid())
  createAt DateTime @default(now())
  updateAT DateTime @default(now())

  name     String    @unique
  users    String[]
  messages Message[]

  @@map("channels")
}

model Message {
  id            Int          @id @default(autoincrement())
  text          String
  username      String
  RoomChannel   RoomChannel? @relation(fields: [roomChannelId], references: [id])
  roomChannelId String?
  Room          Room?        @relation(fields: [roomId], references: [id])
  roomId        String?
}

// model Game {
//   id        Int       @id @default(autoincrement())
//   createAt  DateTime  @default(now())
//   updateAT  DateTime  @default(now())

//   player_one String
//   player_two String
//   score String

//   userId  String
//   user User @relation(fields: [userId], references: [id])

//   @@map("games")
// }

// model Bookmark {
//   id        Int       @id @default(autoincrement())
//   createAt  DateTime  @default(now())
//   updateAT  DateTime  @default(now())

//   title       String
//   description String?
//   link        String

//   userId  Int
//   user User @relation(fields: [userId], references: [id])

// @@map("bookmarks")
// }
